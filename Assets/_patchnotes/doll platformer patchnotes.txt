1.0

-- added sprite renderer package to project, added rudimentary sprites, animation, events

-- added basic jump and movement (using new Input System...). Player uses ActionMap InGamePlayer

-- created project, set up folders

1.1

-- added custom gravity using Edy's post https://forum.unity.com/threads/why-does-rigidbody-3d-not-have-a-gravity-scale.440415/

-- added jumping using Fernado's post https://medium.com/nerd-for-tech/implementing-a-jump-mechanic-unity-6420b106e47a  (with tweaks for 3D Unity project) [removed]

1.2

-- fixed a _bug by removing PlayerInput y values (Player can now only move left and right)

-- added Aim control to character (PlayerInput now reads WASD to aim). added Aim logic to DollPlayer.cs

-- added NPC01 and NPC01 states Attack, Patrol, Take Damage

-- added some rudimentary animation

1.3

-- added StatsComponent.cs for tracking NPC name, HP, move speed, max speed, Attack Power, Sight Distance, Walk Time, Idle Time

-- added Raycast logic to NPC01_PatrolState. casts a ray the size of sight distance and if it detects IPlayer, speeds up. if it gets within a minimum distance from the Player it will enter the Attack State

– Attack state should have interesting logic, ie propel self forward

– Add another State called “active patrol” when the NPC is aggroed and aggressively hunting the Player

-- NPC has a simple State Manager with an Event Manager and an Animation Manager. will need tweaking lol.

1.4

-- added a GroundCheck class. Doll now detects ground properly. Jump is still janky, requires fix

-- added Player sprites version 1.0. Added an animation state controller and linked up sprites

-- added animation logic to Player Movement

1.5

-- created a new folder for Oscars tests

-- made separate players movement and jumping to make it look more fluent and less janky

-- havent included the animation logic as the movement should come first before the animation is included

1.6

-- updated some boring stuff, added Health Component, fiddled with Player states

-- added a Player Attack state with a hitbox

-- added NPC02 (drum NPC)

-- added NPC02 sprite, patrol, attack and take damage state

-- using https://www.youtube.com/watch?v=rgYMRP0FzjM added a child camera and a TopLayer layMask (for rendering a Layer on top of everything else) currently Layer 30

1.7

-- began major refactoring of NPC scripts, condensing into reusable State Machines, States, Event Managers, Animation Controllers, etc

-- added "Take Damage" sprite & anim to NPC02

-- 